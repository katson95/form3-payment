def label = "mypod-${UUID.randomUUID().toString()}"
podTemplate(label: label, containers: [
             containerTemplate(name: 'i360-agent', image: 'katson95/i360-agent:1.9',ttyEnabled: true, command: 'cat'),
             containerTemplate(name: 'g-agent', image: 'katson95/g-agent:1.6', ttyEnabled: true, command: 'cat'),
             containerTemplate(name: 'nodejs-agent', image: 'katson95/nodejs-agent:1.2', ttyEnabled: true, alwaysPullImage: true, command: 'cat'),
             containerTemplate(name: 'a-360', image: 'katson95/a-360:latest', ttyEnabled: true, alwaysPullImage: true, command: 'cat')
             ],
             volumes: [
        hostPathVolume(
            hostPath: '/var/run/docker.sock',
            mountPath: '/var/run/docker.sock'
        )
    ]) {
    node(label) {
       git 'https://github.com/katson95/form3-payment.git'
       stage('Build') {
           container ('a-360') {
                  sh 'chmod +x gradlew'
                  sh './gradlew clean'
                  sh 'java -version'
                  sh 'gradle -v'
                  sh 'pip3 --version'
                  sh 'python3 --version'
                  sh 'docker -v'
                  sh 'docker-compose -v'
                  sh 'docker ps'
                  sh 'ansible --version'
                  sh 'ansible-playbook --version'
               }
           }

        
         stage('Node Js') {
           container ('nodejs-agent') {
                  sh 'node -v'
                  sh 'npm -v'
                  sh 'yarn -v'
                  sh 'ng v'
                  sh 'docker ps'
                  sh 'docker-compose -v'
               }
         }
              
       stage ('Gradle & Docker') {
            container ('i360-agent') {
                sh "docker ps"
                sh "docker-compose -v"
            }
        }
        
         stage('Test') {
           container ('i360-agent') {
                  sh 'chmod +x gradlew'
                  //sh './gradlew test'
               }
         }
    }
}
